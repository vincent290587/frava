/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Fault;
import io.swagger.client.model.StreamSet;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamsApi
 */
@Ignore
public class StreamsApiTest {

    private final StreamsApi api = new StreamsApi();

    
    /**
     * Get Activity Streams
     *
     * Returns the given activity&#39;s streams. Requires activity:read scope. Requires activity:read_all scope for Only Me activities.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActivityStreamsTest() throws ApiException {
        Long id = null;
        List<String> keys = null;
        Boolean keyByType = null;
        StreamSet response = api.getActivityStreams(id, keys, keyByType);

        // TODO: test validations
    }
    
    /**
     * Get Route Streams
     *
     * Returns the given route&#39;s streams. Requires read_all scope for private routes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRouteStreamsTest() throws ApiException {
        Long id = null;
        StreamSet response = api.getRouteStreams(id);

        // TODO: test validations
    }
    
    /**
     * Get Segment Effort Streams
     *
     * Returns a set of streams for a segment effort completed by the authenticated athlete. Requires read_all scope.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSegmentEffortStreamsTest() throws ApiException {
        Long id = null;
        List<String> keys = null;
        Boolean keyByType = null;
        StreamSet response = api.getSegmentEffortStreams(id, keys, keyByType);

        // TODO: test validations
    }
    
    /**
     * Get Segment Streams
     *
     * Returns the given segment&#39;s streams. Requires read_all scope for private segments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSegmentStreamsTest() throws ApiException {
        Long id = null;
        List<String> keys = null;
        Boolean keyByType = null;
        StreamSet response = api.getSegmentStreams(id, keys, keyByType);

        // TODO: test validations
    }
    
}
